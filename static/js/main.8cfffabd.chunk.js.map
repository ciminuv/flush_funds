{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","flush","operationHandler","address","contractAddress","provider","window","ethereum","enable","then","accounts","ethersProvider","ethers","providers","Web3Provider","contract","Contract","Forwarder","abi","getSigner","transaction","alert","hash","catch","error","message","URLSearchParams","location","search","get","className","onClick","flushTokens","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"imsCAyDeA,MApDf,WACE,IAAMC,EAAQ,SAACC,GACb,IAAMC,EAAUC,IACZC,EAAW,KAEe,qBAApBC,OAAOC,UACfF,EAAWC,OAAM,UAMVE,SAASC,MAAK,SAACC,GACtB,IAAIC,EAAiB,IAAIC,IAAOC,UAAUC,aAAaT,GACnDU,EAAW,IAAIH,IAAOI,SAASb,EAASc,EAAUC,IAAKP,EAAeQ,aAC1E,OAAOjB,EAAiBa,MACvBN,MAAK,SAACW,GACPd,OAAOe,MAAMD,EAAYE,SACxBC,OAAM,SAAUC,GACjBlB,OAAOe,MAAMG,EAAMC,YAXnBnB,OAAOe,MAAM,8BA2BXjB,EAAkB,WAItB,OAFe,IAAIsB,gBAAgBpB,OAAOqB,SAASC,QACdC,IAAI,aAFlB,8CAMzB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wBAAQC,QAtBG,WACf9B,GAAM,SAACc,GACL,OAAOA,EAASd,YAoBd,mBACA,wBAAQ8B,QAjBU,WACtB9B,GAAM,SAACc,GACL,OAAOA,EAASiB,YAAY,kDAe1B,qCCvCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8cfffabd.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { ethers }  from 'ethers';\nimport Forwarder from '../src/Forwarder.json';\nimport './App.css';\n\nfunction App() {\n  const flush = (operationHandler) => {\n    const address = contractAddress();\n    let provider = null;\n\n    if(typeof window.ethereum !== 'undefined') {\n      provider = window['ethereum'];\n    } else {\n      window.alert(\"Please install MetaMask!!\");\n      return;\n    }\n\n    provider.enable().then((accounts) => {\n      let ethersProvider = new ethers.providers.Web3Provider(provider);\n      let contract = new ethers.Contract(address, Forwarder.abi, ethersProvider.getSigner());\n      return operationHandler(contract);\n    }).then((transaction) => {\n      window.alert(transaction.hash);\n    }).catch(function (error) {\n      window.alert(error.message);\n    });\n  };\n\n  const flushETH = () => {\n    flush((contract) => {\n      return contract.flush();\n    });\n  };\n\n  const flushPalomaUSDT = () => {\n    flush((contract) => {\n      return contract.flushTokens(\"0xe251b8b9f576c208c18bd6247c74bc111844d336\");\n    });\n  };\n\n  const contractAddress = () => {\n    const defaultAddress = \"0xC6a865a1C47c0F9112678aFC357A431d70C941A1\";\n    const params = new URLSearchParams(window.location.search);\n    const configContractAddress = params.get(\"contract\");\n    return configContractAddress || defaultAddress;\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"center-screen\">\n        <button onClick={flushETH}>Flush</button>\n        <button onClick={flushPalomaUSDT}>Flush Paloma USDT</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}